{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"start",
				"start_date"
			],
			[
				"api_",
				"api_call"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "'use strict';\n\n/* Services */\n\n\n// Demonstrate how to register services\n// In this case it is a simple value service.\nangular.module('myApp.services', []).\n  value('version', '0.2')\n  .factory('userLogin', ['$http', function($http, data) {\n	 $http.post('Http://10.0.0.3:8080/api-token-auth/login', {\"username\": $scope.username, \"password\": $scope.password}).success(function(data) {\n		user.data = data;\n		user.auth = true;\n		return user;\n	 }).error(function() {\n		 user.auth = false;\n		 return user;\n	 });\n  }]);\n\nfunction api_url(api) {\n	var url;\n	url = \"Http://10.0.0.3:8080/\" + api;\n	return url;\n}\n\nfunction api_call($http, api, method, data) {\n	var respond;\n	if (method == 'post') {\n		respond = $http.post(api_url(api), data);\n	}\n	if (method == 'get') {\n		respond = $http.get(api_url(api));\n	}\n	\n	return respond;\n}\n\nfunction getCat($http, cat) {\n	var category\n	$http.get(api_url('categories/' + cat + '/')).success(function(data) {\n		console.log(data.name);\n		category = data.name;\n	});\n	\n	return category;\n}\n\nfunction readCookie(key) {\n	var currentcookie;\n	var firstidx;\n	var lastidx;\n	currentcookie = document.cookie;\n    if (currentcookie.length > 0)\n    {\n        firstidx = currentcookie.indexOf(key + \"=\");\n        if (firstidx != -1)\n        {\n            firstidx = firstidx + key.length + 1;\n            lastidx = currentcookie.indexOf(\";\",firstidx);\n            if (lastidx == -1)\n            {\n                lastidx = currentcookie.length;\n            }\n            return unescape(currentcookie.substring(firstidx, lastidx));\n        }\n    }\n    return null;\n}\n\nfunction setCookie(c_name,value) {\n	var exdate= cookieExp();\n	var c_value=escape(value) + \"; expires=\"+exdate;\n	document.cookie=c_name + \"=\" + c_value;\n}\n\nfunction cookieExp() {\n	var currentDate = new Date();\n	var expDate = new Date(currentDate.getTime() + 86400000);\n	\n	return expDate.toGMTString();\n}\n\nfunction get_id(url) {\n       var split = url.split('/');\n       var id = split[split.length - 1];\n       \n       return id;\n}\n\nfunction is_loggedIn() {\n	var loggedIn;\n	loggedIn = readCookie(\"username\");\n	if (loggedIn == \"null\" || loggedIn == null) {\n			return false;\n		} else {\n			return true;\n		}\n}\n\nfunction weekDay(day) {\n       var weekday=new Array(7);\n       weekday[0]=\"Sunday\";\n       weekday[1]=\"Monday\";\n       weekday[2]=\"Tuesday\";\n       weekday[3]=\"Wednesday\";\n       weekday[4]=\"Thursday\";\n       weekday[5]=\"Friday\";\n       weekday[6]=\"Saturday\";\n       \n       return weekday[day];\n}\n\nfunction adjustEntry(data, categories) {\n       var catName;\n       var start;\n       var end;\n       var mili;\n       var hours;\n       var day;\n       \n       catName = $.grep(categories, function(e) {return e.url == data.category});\n       data.category = catName['0'].name;\n       start = new Date(data.start_date + \" \" + data.start_time);\n       end = new Date(data.start_date + \" \" + data.end_time);\n       mili = end - start;\n       hours = (((mili / 1000) / 60) / 60);\n       day = new Date(data.start_date);\n       day = day.getUTCDay();\n       data.day = weekDay(day);\n       data.total = Math.round(hours *100) / 100;\n              \n       return data;\n       \n}\n\nfunction get_username($http, data) {\n  var returnuser = null;\n  var userlink = data.substring(1);\n  var user = api_call($http, userlink, 'get');\n  user.success(function(username) {\n      returnuser = username.username;\n  });\n  console.log(returnuser);\n}\n\nfunction sort_reports(data) {\n  var response = {};\n  var x;\n  var iter = 0;\n  for (x in data) {\n      if (typeof response[data[x].user] == 'undefined') {\n        response[data[x].user] = {};\n        response[data[x].user].username = data[x].user;\n      }\n      response[data[x].user][iter] = {};\n\n      response[data[x].user][iter]['start_date'] = data[x].start_date;\n      response[data[x].user][iter]['category'] = data[x].category;\n      response[data[x].user][iter]['start_time'] = data[x].start_time;\n      response[data[x].user][iter]['end_time'] = data[x].end_time;\n      response[data[x].user][iter]['total'] = data[x].total;\n      iter = iter + 1;\n    }\n  \n\n  return response;\n}",
			"file": "/opt/lampp/htdocs/labaide/app/js/services.js",
			"file_size": 4107,
			"file_write_time": 1372908770000000,
			"settings":
			{
				"buffer_size": 4103,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/opt/lampp/htdocs/labaide/app/js/controllers.js",
			"settings":
			{
				"buffer_size": 8406,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/env/site/faculty_requests/Faculty_request/project/faculty_request/models.py",
			"settings":
			{
				"buffer_size": 945,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/opt/lampp/htdocs/labaide/app/partials/timesheets/adminperiods.html",
			"settings":
			{
				"buffer_size": 1223,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/opt/lampp/htdocs/labaide/app/css/app.css",
			"settings":
			{
				"buffer_size": 11280,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/opt/lampp/htdocs/labaide/app/partials/facrequest/home.html",
			"settings":
			{
				"buffer_size": 702,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/opt/lampp/htdocs/labaide/app/partials/facrequest/request.html",
			"settings":
			{
				"buffer_size": 1439,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/opt/lampp/htdocs/labaide/app/partials/facrequest/show.html",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/opt/lampp/htdocs/labaide/app/js/filters.js",
			"settings":
			{
				"buffer_size": 428,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/opt/lampp/htdocs/labaide/app/index.html",
			"settings":
			{
				"buffer_size": 3387,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/opt/lampp/htdocs/labaide/app/partials/timesheets/adminreports.html",
			"settings":
			{
				"buffer_size": 85,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/opt/lampp/htdocs/labaide/app/js/app.js",
			"settings":
			{
				"buffer_size": 1244,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git p",
				"Git: Push"
			],
			[
				"git c",
				"Git: Commit"
			],
			[
				"git add .",
				"Git: Add..."
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"g",
				"Github: Open File"
			],
			[
				"",
				"Github: Open File"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/opt/lampp/htdocs/labaide/app/partials/timesheets/admin.html",
		"/opt/lampp/htdocs/labaide/app/partials/timesheets/periods.html",
		"/home/craig/labaide/app/labaide.sublime-project",
		"/opt/lampp/htdocs/labaide/app/partials/timesheets/home.html",
		"/opt/lampp/htdocs/labaide/app/js/controllers.js",
		"/home/craig/labaide/app/index.html",
		"/opt/lampp/htdocs/labaide/app/js/app.js",
		"/opt/lampp/htdocs/labaide/app/partials/timesheets/adminperiods.html",
		"/home/craig/.config/sublime-text-2/Packages/Git/Git.sublime-settings",
		"/home/craig/.config/sublime-text-2/Packages/User/Git.sublime-settings"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"response"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/opt/lampp/htdocs/labaide/app/js/services.js",
					"settings":
					{
						"buffer_size": 4103,
						"regions":
						{
						},
						"selection":
						[
							[
								437,
								437
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/opt/lampp/htdocs/labaide/app/js/controllers.js",
					"settings":
					{
						"buffer_size": 8406,
						"regions":
						{
						},
						"selection":
						[
							[
								8356,
								8356
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3621.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/env/site/faculty_requests/Faculty_request/project/faculty_request/models.py",
					"settings":
					{
						"buffer_size": 945,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/opt/lampp/htdocs/labaide/app/partials/timesheets/adminperiods.html",
					"settings":
					{
						"buffer_size": 1223,
						"regions":
						{
						},
						"selection":
						[
							[
								597,
								597
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/opt/lampp/htdocs/labaide/app/css/app.css",
					"settings":
					{
						"buffer_size": 11280,
						"regions":
						{
						},
						"selection":
						[
							[
								3221,
								3221
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 510.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/opt/lampp/htdocs/labaide/app/partials/facrequest/home.html",
					"settings":
					{
						"buffer_size": 702,
						"regions":
						{
						},
						"selection":
						[
							[
								549,
								549
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/opt/lampp/htdocs/labaide/app/partials/facrequest/request.html",
					"settings":
					{
						"buffer_size": 1439,
						"regions":
						{
						},
						"selection":
						[
							[
								1295,
								1295
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/opt/lampp/htdocs/labaide/app/partials/facrequest/show.html",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/opt/lampp/htdocs/labaide/app/js/filters.js",
					"settings":
					{
						"buffer_size": 428,
						"regions":
						{
						},
						"selection":
						[
							[
								257,
								257
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/opt/lampp/htdocs/labaide/app/index.html",
					"settings":
					{
						"buffer_size": 3387,
						"regions":
						{
						},
						"selection":
						[
							[
								2332,
								2332
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 442.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/opt/lampp/htdocs/labaide/app/partials/timesheets/adminreports.html",
					"settings":
					{
						"buffer_size": 85,
						"regions":
						{
						},
						"selection":
						[
							[
								85,
								85
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/opt/lampp/htdocs/labaide/app/js/app.js",
					"settings":
					{
						"buffer_size": 1244,
						"regions":
						{
						},
						"selection":
						[
							[
								1094,
								1094
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.git":
	{
		"height": 112.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 200.0,
	"status_bar_visible": true
}
